worker_processes 2;

events {
    worker_connections 1024;
}

env SECDN_APIKEY_DIR;
env MINIO_SECRET_KEY;

http {
    error_log stderr info;

    lua_package_path "/opt/bitnami/openresty/nginx/lua/?.lua;;";
    lua_code_cache off; # this will hurt performance
    lua_shared_dict secrets 1m;
    init_worker_by_lua_block {
        local dir = os.getenv("SECDN_APIKEY_DIR")
        local auth = require("api_key_auth")
        local ok, err = auth.load(dir)
        if ok then
            ngx.log(ngx.INFO, "[init_worker] API keys loaded and cached")
        else
            ngx.log(ngx.ERR, "[init_worker] failed to load API keys: ", err)
        end

        local key = os.getenv("MINIO_SECRET_KEY")
        if key then
            ngx.shared.secrets:set("MINIO_SECRET_KEY", key)
            ngx.log(ngx.INFO, "[init_worker] MinIO Secret key loaded and cached")
        else
            ngx.log(ngx.ERR, "[init_worker] failed to load MINIO_SECRET_KEY!")
        end
    }

    resolver 127.0.0.11 ipv6=off;  # 這行是關鍵！

    server {
        listen 8080;

        location = /benchmark_timer {
            content_by_lua_file /opt/bitnami/openresty/nginx/lua/benchmark_timer.lua;
        }

        location = /api/keys {
            # allow 127.0.0.1;
            # deny all;
            set $api_key_name "secdn-admin";
            access_by_lua_file /opt/bitnami/openresty/nginx/lua/api_key_check.lua;
            content_by_lua_block {
                if ngx.req.get_method() ~= "GET" then
                    ngx.status = ngx.HTTP_NOT_ALLOWED
                    ngx.say("HTTP method not allowed")
                    return
                end

                local auth = require("api_key_auth")
                ngx.say("Loaded keys:")
                for _, k in ipairs(auth.list()) do
                    ngx.say("- ",k)
                end
            }
        }

        location = /lua-status {
            content_by_lua_block {
                ngx.header.content_type = "text/plain"
                ngx.say("Lua Debug Info")
                ngx.say("--------------")
                ngx.say("OpenResty Version: ", ngx.config.nginx_version)
                ngx.say("LuaJIT Version: ", jit and jit.version or "N/A")
                ngx.say("Hostname: ", ngx.var.hostname)
            }
        }

        location /minio/ {
            set $api_key_name "user-a";
            access_by_lua_file /opt/bitnami/openresty/nginx/lua/api_key_check.lua;
            proxy_pass http://127.0.0.1:8081/;
        }

        location / {
            proxy_pass http://172.17.0.1;
        }
    }

    server {
        listen 127.0.0.1:8081;

        location ~ ^/([^/]+)/(.*)$ {
            set $minio_schema "http";
            set $minio_host "minio:9000";
            set $access_key "bucket-key";
            set $bucket_name $1;
            set $object_key $2;

            access_by_lua_file /opt/bitnami/openresty/nginx/lua/signer.lua;
            proxy_pass http://minio:9000/$bucket_name/$object_key;
        }
    }
}
